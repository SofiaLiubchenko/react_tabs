{"version":3,"sources":["helpers.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["findTabById","tabsList","tabId","find","tab","id","Tabs","tabs","selectedTabId","onTabSelected","currentTab","className","map","classNames","href","onClick","handleTabClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAACC,EAAiBC,GAC3C,OAAOD,EAASE,MAAK,SAAAC,GAAG,OAAIF,IAAUE,EAAIC,O,OCQ/BC,EAAkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAO/CC,EAAaV,EAAYO,EAAMC,IAAkBD,EAAK,GAE5D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAgB,UAAQ,cAAvC,SACE,6BACGJ,EAAKK,KAAI,SAAAR,GAAG,OACX,oBACEO,UAAWE,IAAW,CAAE,YAAaH,EAAWL,KAAOD,EAAIC,KAC3D,UAAQ,MAFV,SAKE,mBACES,KAAI,WAAMV,EAAIC,IACd,UAAQ,UACRU,QAAS,kBArBA,SAACX,GAClBI,IAAkBJ,EAAIC,IACxBI,EAAcL,GAmBWY,CAAeZ,IAHhC,SAKGA,EAAIa,SAPFb,EAAIC,WAcjB,qBAAKM,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAWQ,cCnCPX,EAAO,CAClB,CAAEF,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAiB,SAA3D,mBAAOZ,EAAP,KAAsBa,EAAtB,KAMMX,EAAaV,EAAYO,EAAMC,IAAkBD,EAAK,GAE5D,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAWO,SAGjC,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACL,GACrBiB,EAAiBjB,EAAIC,WCfzBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ebbd3524.chunk.js","sourcesContent":["import { Tab } from './types';\n\nexport const findTabById = (tabsList: Tab[], tabId: string) => {\n  return tabsList.find(tab => tabId === tab.id);\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { findTabById } from '../../helpers';\nimport { Tab } from '../../types';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  const handleTabClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  const currentTab = findTabById(tabs, selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\" data-cy=\"tab-content\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({ 'is-active': currentTab.id === tab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types';\nimport { findTabById } from './helpers';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>('tab-1');\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const currentTab = findTabById(tabs, selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currentTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}